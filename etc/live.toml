##
## Pierre Configuration
##

[desk]
threads = 2
units = [
  {name = "el dance", type = "dimmable", addr = 2, range = [0.01, 0.25], dim = 0.03, pulse = [0.5, 0.25]},
  {name = "el entry", type = "dimmable", addr = 3, range = [0.25, 0.01], dim = 0.03, pulse = [0.15, 0.03]},
  {name = "led forest", type = "dimmable", addr = 4, dim = 0.005, pulse = [0.02, 0.005]},
  {name = "disco ball", type = "dimmable", addr = 1, dim = 0.65, pulse = []},
  {name = "main spot", type = "pinspot", addr = 1, frame_len = 6},
  {name = "fill spot", type = "pinspot", addr = 7, frame_len = 6},
  {name = "ac power", type = "switch", addr = 1}
]

[desk.dmx_ctrl]
threads = 2
local = { stalled.ms = 7_333, resolve = { timeout.ms = 7_333, retry.ms = 5_250 } }
# remote = { host = "dmx", idle_shutdown_ms = 15_000, stats.ms = 2_000 }
remote = { host = "dmx-test", idle_shutdown.ms = 15_000, stats.ms = 2_000 }

[frame.av]
fft = [
  {left = { window = "Blackman_Nuttall", comp = false }},
  {right = { window = "Hann", comp = false }}
]


[frame.cipher]
buffer_size = 0x2000 # bytes 4k

[frame.clock]
host = "127.0.0.1"              # nqptp host
shm_name = "/nqptp"             # path to nqptp shared memory directory

# UNUSED:  need implementation
# [frame.peaks.dB] # only keep peaks in this range
# floor = 0.9
# ceiling = 128.0

[fx.majorpeak]
silence = { timeout = { secs = 33 } }
color = { hue = 0.0, sat = 1.0, bri = 1.0 }
dB_range = [-50.0, -20.0]

[[fx.majorpeak.color_spec]]
name = "high"
bound_peaks = [{ freq = 180.0, dB = -50.0 }, { freq = 11500.0, dB = -20.0 }]
colors = [{ hue = 300.0, sat = 100.0, bri = 0.0 },{ hue = 359.9, sat = 100.0, bri = 85.0 }]
step_type = "hue"
step = 0.5

[[fx.majorpeak.color_spec]]
name = "generic"
bound_peaks = [{ freq = 40.0, dB = -55.0 }, { freq = 1100.0, dB = -20.0 }]
colors = [{ hue = 0.0, sat = 1.0, bri = 0.0 },{ hue = 340.0, sat = 1.0, bri = 100.0 }]
step_type = "hue"
step = 0.1

[[fx.majorpeak.color_spec]]
name = "low"
bound_peaks = [{freq = 40.0, dB = -60.0}, {freq = 180.0, dB = -20.0}]
colors = [{ hue = 0.0, sat = 1.0, bri = 0.0 }, { hue = 360.0, sat = 1.0, bri = 1.0 }]
step_type = "hue"
step = 0.1

[[fx.majorpeak.spot_spec]]
id = "fill"
unit = "fill spot"
color_spec = "low"
fade = { color = { hue = 360.0, sat = 1.0, bri = 1.0}, timeout = { millis = 850 } }
alternate = [
 {greater=true, freq=true, last=true, color={bri=0.30}}
]

[[fx.majorpeak.spot_spec]]
id = "main"
unit = "main spot"
color_spec = "high"
fade = { color = {hue = 360.0, sat = 1.0, bri = 1.0}, timeout = { millis = 700 } }
alternate = [
  {greater=true, freq=true, color={bri=0.8}},
  {greater=true, dB=true, last=true, color={bri=0.5}}
]

[fx.standby]
color = { hue = 0.0, sat = 1.0, bri = 1.0 }
hue_step = 0.23
silence = { timeout = { minutes = 30, seconds  = 30 } }

[logger]
# category specific alternate
async = true
debug = false   # show any debug messages?
init = true     # always log init messages from any module, when true
shutdown = true # show any shutdown messages?
threads = true  # show any thread messages?
threads_start = false
threads_stop = false

[logger.conf.token]
latest = false

[logger.conf.watch]
check = false
initiate = false
initiate_watch = false

[logger.desk]
flush = true
frame_render = false
handoff = false
loop = true
rendering = true
resume = true
shutdown_all = true
threads_start = false
threads_stop = false

[logger.desk.dmx_ctrl]
host = { connect = true, resolve = false, rev_resolve = false, unknown = true }
load_config = false
run = true

[logger.desk.units]
load_config = true

[logger.frame]
anchor = true
av = {init = true}
clock = { init = true, map_shm = false, peers_update = false, refresh = false, shutdown = false }
decipher = false
state_now = false

# [logger.frame.anc]
# base = true
# data = true

[logger.frame.reel]
clean = false
flush = true
frame_next = false
push_back = false

[logger.fx]
select = true
major_peak = { execute = false, load_config = true }
set_silence = true

[logger.fx.standby]
execute = true
apply_config = true

[logger.mdns]
start = false

[logger.mdns.ctx]
advertise = false
all_for_now = false
browse = false 
cb_client = false
cb_browse = false
cb_evt_grp = false
resolved = false

[logger.rtsp]
audio = { thread = false }
ctx = true
init = true
event = false
net = false
reply = { build = false, info = false, anc = true }

[mdns]
port = 7000
receiver = "Pierre Devel" # specify %h to use hostname
service = "_ruth._tcp"    # service advertised by rendering devices

[rtsp]
audio = { buffer_size = { bytes = 0x800000 } }
connection = { timeout_ms = 30_000 }
saver = { enable = false, file = "/tmp/rtsp.log", format = "raw " }

[stats]
enabled = true
db_uri = "http://localhost:8086?db=pierre"
batch_of = 150